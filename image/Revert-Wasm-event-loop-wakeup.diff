From 2e5ce0a18a6f3bf5b7274acb3497cb7bfca43597 Mon Sep 17 00:00:00 2001
From: Fredrik Orderud <forderud@gmail.com>
Date: Sat, 25 Jan 2020 13:34:27 +0100
Subject: [PATCH] Revert Wasm: Support event loop wakeup from secondary threads

https://codereview.qt-project.org/c/qt/qtbase/+/280199
---
 src/corelib/kernel/qeventdispatcher_unix_p.h  |  2 +-
 .../platforms/wasm/qwasmeventdispatcher.cpp   | 23 -------------------
 .../platforms/wasm/qwasmeventdispatcher.h     |  2 --
 3 files changed, 1 insertion(+), 26 deletions(-)

diff --git a/src/corelib/kernel/qeventdispatcher_unix_p.h b/src/corelib/kernel/qeventdispatcher_unix_p.h
index 581df9242c..f37edfc967 100644
--- a/src/corelib/kernel/qeventdispatcher_unix_p.h
+++ b/src/corelib/kernel/qeventdispatcher_unix_p.h
@@ -118,7 +118,7 @@ public:
 
     int remainingTime(int timerId) final;
 
-    void wakeUp() override;
+    void wakeUp() final;
     void interrupt() final;
     void flush() override;
 
diff --git a/src/plugins/platforms/wasm/qwasmeventdispatcher.cpp b/src/plugins/platforms/wasm/qwasmeventdispatcher.cpp
index d89cd78b28..41355d72ae 100644
--- a/src/plugins/platforms/wasm/qwasmeventdispatcher.cpp
+++ b/src/plugins/platforms/wasm/qwasmeventdispatcher.cpp
@@ -33,14 +33,6 @@
 
 #include <emscripten.h>
 
-#if (__EMSCRIPTEN_major__ > 1 || __EMSCRIPTEN_minor__ > 38 || __EMSCRIPTEN_minor__ == 38 && __EMSCRIPTEN_tiny__ >= 22)
-#  define EMSCRIPTEN_HAS_ASYNC_RUN_IN_MAIN_RUNTIME_THREAD
-#endif
-
-#ifdef EMSCRIPTEN_HAS_ASYNC_RUN_IN_MAIN_RUNTIME_THREAD
-#include <emscripten/threading.h>
-#endif
-
 class QWasmEventDispatcherPrivate : public QEventDispatcherUNIXPrivate
 {
 
@@ -187,18 +179,3 @@ void QWasmEventDispatcher::doMaintainTimers()
     emscripten_async_call(callback, this, toWaitDuration);
     m_currentTargetTime = newTargetTime;
 }
-
-void QWasmEventDispatcher::wakeUp()
-{
-#ifdef EMSCRIPTEN_HAS_ASYNC_RUN_IN_MAIN_RUNTIME_THREAD
-    if (!emscripten_is_main_runtime_thread())
-        emscripten_async_run_in_main_runtime_thread_(EM_FUNC_SIG_VI, (void*)(&QWasmEventDispatcher::mainThreadWakeUp), this);
-#endif
-    QEventDispatcherUNIX::wakeUp();
-}
-
-void QWasmEventDispatcher::mainThreadWakeUp(void *eventDispatcher)
-{
-    emscripten_resume_main_loop(); // Service possible requestUpdate Calls
-    static_cast<QWasmEventDispatcher *>(eventDispatcher)->processEvents(QEventLoop::AllEvents);
-}
diff --git a/src/plugins/platforms/wasm/qwasmeventdispatcher.h b/src/plugins/platforms/wasm/qwasmeventdispatcher.h
index f72d92ce07..5300b3de73 100644
--- a/src/plugins/platforms/wasm/qwasmeventdispatcher.h
+++ b/src/plugins/platforms/wasm/qwasmeventdispatcher.h
@@ -51,8 +51,6 @@ public:
 protected:
     bool processEvents(QEventLoop::ProcessEventsFlags flags) override;
     void doMaintainTimers();
-    void wakeUp() override;
-    static void mainThreadWakeUp(void *eventDispatcher);
 
 private:
     bool m_hasMainLoop = false;
-- 
2.22.0.windows.1

